// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SoundSharp_I9AO.Models;

namespace SoundSharp_I9AO.Migrations
{
    [DbContext(typeof(SoundSharpContext))]
    [Migration("20211124151408_Licenseplate added")]
    partial class Licenseplateadded
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "Latin1_General_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SoundSharp_I9AO.Models.Audiodevice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Btw")
                        .HasColumnType("numeric(3,1)")
                        .HasColumnName("btw");

                    b.Property<string>("Make")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("make");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("model");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int")
                        .HasColumnName("OWNER_id");

                    b.Property<decimal?>("PriceExBtw")
                        .HasColumnType("numeric(6,2)")
                        .HasColumnName("price_ex_btw");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("AUDIODEVICE");
                });

            modelBuilder.Entity("SoundSharp_I9AO.Models.Cddiscman", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("Displayheight")
                        .HasColumnType("int")
                        .HasColumnName("displayheight");

                    b.Property<int>("Displaywidth")
                        .HasColumnType("int")
                        .HasColumnName("displaywidth");

                    b.Property<bool>("IsEjected")
                        .HasColumnType("bit")
                        .HasColumnName("is_ejected");

                    b.Property<int>("Mbsize")
                        .HasColumnType("int")
                        .HasColumnName("mbsize");

                    b.HasKey("Id");

                    b.ToTable("CDDISCMAN");
                });

            modelBuilder.Entity("SoundSharp_I9AO.Models.Memorecorder", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("MaxCartridgeType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("max_cartridge_type");

                    b.HasKey("Id");

                    b.ToTable("MEMORECORDER");
                });

            modelBuilder.Entity("SoundSharp_I9AO.Models.Mp3player", b =>
                {
                    b.Property<int>("Serialid")
                        .HasColumnType("int")
                        .HasColumnName("serialid");

                    b.Property<int>("Displayheight")
                        .HasColumnType("int")
                        .HasColumnName("displayheight");

                    b.Property<int>("Displaywidth")
                        .HasColumnType("int")
                        .HasColumnName("displaywidth");

                    b.Property<int?>("Mbsize")
                        .HasColumnType("int")
                        .HasColumnName("mbsize");

                    b.HasKey("Serialid")
                        .HasName("MP3PLAYER_PK");

                    b.ToTable("MP3PLAYER");
                });

            modelBuilder.Entity("SoundSharp_I9AO.Models.Owner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Firstname")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("firstname");

                    b.Property<short>("Housenumber")
                        .HasColumnType("smallint")
                        .HasColumnName("housenumber");

                    b.Property<string>("HousenumberAdd")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("housenumber_add");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("lastname");

                    b.Property<string>("LicensePlate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Middlename")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("middlename");

                    b.Property<string>("Postalcode")
                        .IsRequired()
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("char(6)")
                        .HasColumnName("postalcode")
                        .IsFixedLength(true);

                    b.Property<string>("Street")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("street");

                    b.HasKey("Id");

                    b.ToTable("OWNER");
                });

            modelBuilder.Entity("SoundSharp_I9AO.Models.Playlist", b =>
                {
                    b.Property<decimal>("PlaylistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(28,0)")
                        .HasColumnName("PLAYLIST_ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

                    b.Property<int?>("Mp3playerSerialid")
                        .HasColumnType("int")
                        .HasColumnName("MP3PLAYER_serialid");

                    b.Property<short>("Position")
                        .HasColumnType("smallint");

                    b.HasKey("PlaylistId");

                    b.HasIndex("Mp3playerSerialid");

                    b.ToTable("PLAYLIST");
                });

            modelBuilder.Entity("SoundSharp_I9AO.Models.PlaylistTracks", b =>
                {
                    b.Property<int>("TrackId")
                        .HasColumnType("int")
                        .HasColumnName("TRACK_id");

                    b.Property<decimal>("PlaylistPlaylistId")
                        .HasColumnType("numeric(28,0)")
                        .HasColumnName("PLAYLIST_PLAYLIST_ID");

                    b.HasKey("TrackId", "PlaylistPlaylistId")
                        .HasName("PlaylistTracks_PK");

                    b.HasIndex("PlaylistPlaylistId");

                    b.ToTable("PlaylistTracks");
                });

            modelBuilder.Entity("SoundSharp_I9AO.Models.Track", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Albumsource")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("albumsource");

                    b.Property<string>("Artist")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("artist");

                    b.Property<TimeSpan?>("Length")
                        .HasColumnType("time")
                        .HasColumnName("length");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.Property<string>("Style")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("style");

                    b.HasKey("Id");

                    b.ToTable("TRACK");
                });

            modelBuilder.Entity("SoundSharp_I9AO.Models.Audiodevice", b =>
                {
                    b.HasOne("SoundSharp_I9AO.Models.Owner", "Owner")
                        .WithMany("Audiodevices")
                        .HasForeignKey("OwnerId")
                        .HasConstraintName("AUDIODEVICE_OWNER_FK")
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("SoundSharp_I9AO.Models.Cddiscman", b =>
                {
                    b.HasOne("SoundSharp_I9AO.Models.Audiodevice", "AudioDevice")
                        .WithOne("Cddiscman")
                        .HasForeignKey("SoundSharp_I9AO.Models.Cddiscman", "Id")
                        .HasConstraintName("CDDISCMAN_AUDIODEVICE_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AudioDevice");
                });

            modelBuilder.Entity("SoundSharp_I9AO.Models.Memorecorder", b =>
                {
                    b.HasOne("SoundSharp_I9AO.Models.Audiodevice", "AudioDevice")
                        .WithOne("Memorecorder")
                        .HasForeignKey("SoundSharp_I9AO.Models.Memorecorder", "Id")
                        .HasConstraintName("MEMORECORDER_AUDIODEVICE_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AudioDevice");
                });

            modelBuilder.Entity("SoundSharp_I9AO.Models.Mp3player", b =>
                {
                    b.HasOne("SoundSharp_I9AO.Models.Audiodevice", "AudioDevice")
                        .WithOne("Mp3player")
                        .HasForeignKey("SoundSharp_I9AO.Models.Mp3player", "Serialid")
                        .HasConstraintName("MP3PLAYER_AUDIODEVICE_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AudioDevice");
                });

            modelBuilder.Entity("SoundSharp_I9AO.Models.Playlist", b =>
                {
                    b.HasOne("SoundSharp_I9AO.Models.Mp3player", "Mp3playerSerial")
                        .WithMany("Playlists")
                        .HasForeignKey("Mp3playerSerialid")
                        .HasConstraintName("PLAYLIST_MP3PLAYER_FK");

                    b.Navigation("Mp3playerSerial");
                });

            modelBuilder.Entity("SoundSharp_I9AO.Models.PlaylistTracks", b =>
                {
                    b.HasOne("SoundSharp_I9AO.Models.Playlist", "PlaylistPlaylist")
                        .WithMany("Relation2s")
                        .HasForeignKey("PlaylistPlaylistId")
                        .HasConstraintName("PlaylistTracks_PLAYLIST_FK")
                        .IsRequired();

                    b.HasOne("SoundSharp_I9AO.Models.Track", "Track")
                        .WithMany("Relation2s")
                        .HasForeignKey("TrackId")
                        .HasConstraintName("PlaylistTracks_TRACK_FK")
                        .IsRequired();

                    b.Navigation("PlaylistPlaylist");

                    b.Navigation("Track");
                });

            modelBuilder.Entity("SoundSharp_I9AO.Models.Audiodevice", b =>
                {
                    b.Navigation("Cddiscman");

                    b.Navigation("Memorecorder");

                    b.Navigation("Mp3player");
                });

            modelBuilder.Entity("SoundSharp_I9AO.Models.Mp3player", b =>
                {
                    b.Navigation("Playlists");
                });

            modelBuilder.Entity("SoundSharp_I9AO.Models.Owner", b =>
                {
                    b.Navigation("Audiodevices");
                });

            modelBuilder.Entity("SoundSharp_I9AO.Models.Playlist", b =>
                {
                    b.Navigation("Relation2s");
                });

            modelBuilder.Entity("SoundSharp_I9AO.Models.Track", b =>
                {
                    b.Navigation("Relation2s");
                });
#pragma warning restore 612, 618
        }
    }
}
